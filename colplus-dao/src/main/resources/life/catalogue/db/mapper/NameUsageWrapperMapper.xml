<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="life.catalogue.db.mapper.NameUsageWrapperMapper">

    <resultMap id="issueResultMap" type="NameUsageWrapper" autoMapping="true">
        <result property="issues" column="issues" typeHandler="life.catalogue.db.type.IssueSetTypeHandler" />
    </resultMap>


    <resultMap id="usageResultMap" type="NameUsageWrapper" autoMapping="true" extends="issueResultMap">
        <id column="uid" />
        <association property="usage">
            <discriminator column="is_synonym" javaType="boolean">
                <case value="false" resultType="Taxon"   resultMap="life.catalogue.db.mapper.TaxonMapper.taxonResultMap"/>
                <case value="true"  resultType="Synonym" resultMap="life.catalogue.db.mapper.SynonymMapper.synonymResultMap"/>
            </discriminator>
        </association>
        <collection property="vernacularNames" ofType="VernacularName" autoMapping="true" columnPrefix="v_" notNullColumn="id">
            <id property="id" column="id"/>
        </collection>
        <collection property="decisions" ofType="SimpleDecision" autoMapping="true" columnPrefix="ed_" notNullColumn="key">
            <id property="key" column="key"/>
        </collection>
    </resultMap>

    <resultMap id="classificationResultMap" type="SimpleNameClassification">
        <id property="id" column="uid"/>
        <result property="classification" column="classification" typeHandler="life.catalogue.db.type2.SimpleNameArrayTypeHandler" />
    </resultMap>

    <resultMap id="taxonGetClassificationResultMap" type="NameUsageWrapper" autoMapping="true" extends="usageResultMap">
        <collection property="classification" ofType="SimpleName" column="{key.id=id,key.datasetKey=dataset_key}" autoMapping="true"
                    select="life.catalogue.db.mapper.TaxonMapper.classificationSimple"/>
    </resultMap>

    <resultMap id="bareNameResultMap" type="NameUsageWrapper" autoMapping="true" extends="issueResultMap">
        <id column="n_id"/>
        <association property="usage" javaType="BareName">
            <id column="n_id" />
            <association property="name" javaType="Name" resultMap="life.catalogue.db.mapper.NameMapper.nameResultMap" columnPrefix="n_" />
        </association>
    </resultMap>

    <sql id="taxonSelectFrom">
        <include refid="life.catalogue.db.mapper.NameUsageMapper.SELECT" />,
        d.gbif_publisher_key AS publisherKey,
        s.subject_dataset_key AS sectorDatasetKey,
        vbn.issues || vbt.issues AS issues,
        ed.key AS ed_key, ed.dataset_key AS ed_dataset_key, ed.mode AS ed_mode,
        vn.id AS v_id, vn.name AS v_name, vn.latin AS v_latin, vn.language AS v_language
    FROM <include refid="life.catalogue.db.mapper.NameUsageMapper.FROM"/>
        JOIN dataset d ON d.key=u.dataset_key
        LEFT JOIN sector s ON s.key=u.sector_key
        LEFT JOIN verbatim_${partition} vbt ON vbt.id=u.verbatim_key
        LEFT JOIN verbatim_${partition} vbn ON vbn.id=n.verbatim_key
        LEFT JOIN vernacular_name_${partition} vn ON vn.taxon_id=u.id
        LEFT JOIN decision ed ON ed.subject_dataset_key=#{datasetKey} AND ed.subject_id=u.id
    </sql>


    <select id="processTree" parameterType="map" resultMap="classificationResultMap" resultOrdered="true" fetchSize="1000" resultSetType="FORWARD_ONLY">
        <include refid="life.catalogue.db.Common.partitionByDatasetKey"/>
        WITH RECURSIVE tree AS (
            SELECT #{usageId} AS uid, classification_sn(#{datasetKey}, #{usageId}, true) AS classification
        UNION ALL
            SELECT u.id, array_append(tree.classification, (u.id,n.rank,n.scientific_name)::simple_name)
            FROM name_usage_${datasetKey} u JOIN name_${datasetKey} n ON u.name_id=n.id JOIN tree ON (tree.uid = u.parent_id)
            <if test="sectorKey != null">
                WHERE u.sector_key = #{sectorKey}
            </if>
	   )
       SELECT * FROM tree
       <if test="sectorKey != null">
            WHERE uid != #{usageId} OR (SELECT sector_key=#{sectorKey} FROM name_usage_${datasetKey} WHERE id=#{usageId})
       </if>
    </select>

    <select id="processDatasetBareNames" parameterType="map" resultMap="bareNameResultMap" resultOrdered="true" fetchSize="1000" resultSetType="FORWARD_ONLY">
        <include refid="life.catalogue.db.Common.partitionByDatasetKey"/>
        SELECT v.issues,
        <include refid="life.catalogue.db.mapper.NameMapper.nameCols">
            <property name="alias" value="n"/>
            <property name="prefix" value="n_"/>
        </include>
        FROM name_${partition} n
            LEFT JOIN name_usage_${partition}  u ON n.id = u.name_id
            LEFT JOIN verbatim_${partition} v ON v.id= n.verbatim_key
        WHERE u.id IS NULL
        <if test="sectorKey != null">
        	AND n.sector_key = #{sectorKey}
   	    </if>
    </select>

    <select id="get" parameterType="map" resultMap="taxonGetClassificationResultMap">
        <include refid="life.catalogue.db.Common.partitionByDatasetKey"/>
        SELECT u.id AS uid, <include refid="taxonSelectFrom" />
        WHERE u.id = #{id}
    </select>

    <select id="getWithoutClassification" parameterType="map" resultMap="usageResultMap">
        <include refid="life.catalogue.db.Common.partitionByDatasetKey"/>
        SELECT u.id AS uid, NULL AS classification, <include refid="taxonSelectFrom" />
        WHERE u.id = #{id}
    </select>

</mapper>
