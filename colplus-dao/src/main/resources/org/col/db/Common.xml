<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.col.db.Common">

    <sql id="limit">
        LIMIT #{page.limit} OFFSET #{page.offset}
    </sql>

    <!-- derive the partition index from a dataset key -->
    <sql id="partitionByDatasetKey">
        <bind name="partition" value="@org.col.dao.Partitioner@partition(datasetKey)"/>
    </sql>

    <!-- derive the partition index from a DatasetScopeable key value -->
    <sql id="partitionByKey">
        <bind name="partition" value="@org.col.dao.Partitioner@partition(key)"/>
    </sql>

    <!-- derive the partition index from a DatasetScopeable obj value -->
    <sql id="partitionByObj">
        <bind name="partition" value="@org.col.dao.Partitioner@partition(obj)"/>
    </sql>

    <!-- selects the last successful import, i.e. the one that imported data -->
    <sql id="fromFinishedDatasetImport">
        FROM dataset_import
        WHERE dataset_key = #{datasetKey} AND state = ${@org.col.api.vocab.ImportState@FINISHED.ordinal()}
        ORDER BY attempt DESC
        LIMIT 1
    </sql>

    <!-- selects the last successful import, i.e. the one that imported data -->
    <sql id="countFromFinishedDatasetImport">
        SELECT coalesce((SELECT ${column} <include refid="org.col.db.Common.fromFinishedDatasetImport"/>), 0)
    </sql>

    <!--
    Expects parameters: datasetKey, table, column
    Optionally a where parameter
    -->
    <sql id="count">
        <bind name="partition" value="@org.col.dao.Partitioner@partition(datasetKey)"/>
        <if test="datasetKey &lt; 10 or _parameter.containsKey('where')">
            SELECT count(*) FROM ${table}_${partition} WHERE dataset_key = #{datasetKey}
            <if test="_parameter.containsKey('where') != null">
                AND ${where}
            </if>
        </if>
        <if test="datasetKey &gt;= 10 and not _parameter.containsKey('where')">
            <include refid="org.col.db.Common.countFromFinishedDatasetImport" />
        </if>
    </sql>
</mapper>

