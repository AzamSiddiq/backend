<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.col.db.mapper.NameUsageWrapperMapper">

    <resultMap id="issueResultMap" type="NameUsageWrapper" autoMapping="true">
        <result property="issues" column="issues" typeHandler="org.col.db.type2.IssueSetTypeHandler" />
    </resultMap>


    <resultMap id="usageResultMap" type="NameUsageWrapper" autoMapping="true" extends="issueResultMap">
        <id column="id" />
        <association property="usage">
            <id property="id" column="id" />
            <discriminator column="is_synonym" javaType="boolean">
                <case value="false" resultType="Taxon"   resultMap="org.col.db.mapper.TaxonMapper.taxonResultMap"/>
                <case value="true"  resultType="Synonym" resultMap="org.col.db.mapper.SynonymMapper.synonymResultMap"/>
            </discriminator>
        </association>
        <collection property="vernacularNames" ofType="VernacularName" autoMapping="true" notNullColumn="v_key">
            <id property="key" column="v_key"/>
        </collection>
    </resultMap>

    <resultMap id="taxonWithClassificationResultMap" type="NameUsageWrapper" autoMapping="true" extends="usageResultMap">
        <result property="classificationIds" column="classificationIds" typeHandler="org.col.db.type.StringArrayTypeHandler"/>
        <result property="classificationNames" column="classificationNames" typeHandler="org.col.db.type.StringArrayTypeHandler"/>
        <result property="classificationRanks" column="classificationRanks" typeHandler="org.col.db.type.RankArrayTypeHandler"/>
    </resultMap>

    <resultMap id="taxonGetClassificationResultMap" type="NameUsageWrapper" autoMapping="true" extends="usageResultMap">
        <collection property="classification" ofType="SimpleName" column="{id=id,datasetKey=dataset_key}" autoMapping="true"
                    select="org.col.db.mapper.TaxonMapper.classificationSimple"/>
    </resultMap>

    <resultMap id="bareNameResultMap" type="NameUsageWrapper" autoMapping="true" extends="issueResultMap">
        <id column="n_id"/>
        <association property="usage" javaType="BareName">
            <id column="n_key" />
            <association property="name" javaType="Name" resultMap="org.col.db.mapper.NameMapper.nameResultMap" columnPrefix="n_" />
        </association>
    </resultMap>


    <sql id="taxonSelectFrom">
        <include refid="org.col.db.mapper.NameUsageMapper.SELECT" />,
        vbn.issues || vbt.issues AS issues,
        <if test="datasetKey != @org.col.api.vocab.Datasets@DRAFT_COL">
            ed.key AS decisionKey,
        </if>
        vn.key as v_key, vn.name, vn.latin, vn.language
    FROM <include refid="org.col.db.mapper.NameUsageMapper.FROM"/>
        LEFT JOIN verbatim_${datasetKey} vbt ON vbt.key=u.verbatim_key
        LEFT JOIN verbatim_${datasetKey} vbn ON vbn.key=n.verbatim_key
        LEFT JOIN vernacular_name_${datasetKey} vn ON vn.taxon_id=u.id
        <if test="datasetKey != @org.col.api.vocab.Datasets@DRAFT_COL">
            LEFT JOIN decision ed ON ed.subject_id=u.id AND ed.dataset_key=#{datasetKey}
        </if>
    </sql>
    <!--  select all name usages of a dataset
        Using a optimal fetchsize to enable low memory footprint while keeping good performance using a resulthandler
    -->
    <select id="processDatasetUsages" parameterType="map" resultMap="taxonWithClassificationResultMap" resultOrdered="true" fetchSize="10000" resultSetType="FORWARD_ONLY">
        WITH RECURSIVE tree AS(
            SELECT
                ARRAY[u.id]::text[] AS classificationIds,
                ARRAY[n.rank]::rank[] AS classificationRanks,
                ARRAY[n.scientific_name]::text[] AS classificationNames,
            <include refid="taxonSelectFrom" />
	        WHERE u.parent_id IS NULL AND NOT u.is_synonym
	        <if test="sectorKey != null">
	        	AND u.sector_key = #{sectorKey}
    	    </if>
	        
            UNION

            SELECT
                array_append(tree.classificationIds, u.id),
                array_append(tree.classificationRanks, n.rank),
                array_append(tree.classificationNames, n.scientific_name),
            <include refid="taxonSelectFrom" />
                JOIN tree ON (tree.id = u.parent_id)
		        <if test="sectorKey != null">
		        	WHERE u.sector_key = #{sectorKey}
	    	    </if>
	   )
	   SELECT * FROM tree
    </select>

    <select id="processDatasetBareNames" parameterType="map" resultMap="bareNameResultMap" resultOrdered="true" fetchSize="10000" resultSetType="FORWARD_ONLY">
        SELECT v.issues,
        <include refid="org.col.db.mapper.NameMapper.nameCols">
            <property name="alias" value="n"/>
            <property name="prefix" value="n_"/>
        </include>
        FROM name_${datasetKey} n
            LEFT JOIN synonym_${datasetKey}  s ON n.id = s.name_id
            LEFT JOIN taxon_${datasetKey}    t ON n.id = u.name_id
            LEFT JOIN verbatim_${datasetKey} v ON v.key= n.verbatim_key
        WHERE u.id IS NULL AND s.taxon_id IS NULL
        <if test="sectorKey != null">
        	AND n.sector_key = #{sectorKey}
   	    </if>
    </select>

    <select id="get" parameterType="map" resultMap="taxonGetClassificationResultMap">
        SELECT
        <include refid="taxonSelectFrom" />
        WHERE u.id = #{id}
    </select>


</mapper>
