<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.col.db.mapper.NameMapper">

    <sql id="SELECT">
        n.key,
        n.id,
        n.dataset_key,
        n.scientific_name,
        n.rank,
        n.genus,
        n.infrageneric_epithet,
        n.specific_epithet,
        n.infraspecific_epithet,
        n.notho,
        n.original_authors,
        n.original_year,
        n.combination_authors,
        n.combination_year,
        n.nomenclatural_code,
        n.status,
        n.origin,
        n.type,
        n.fossil,
        n.original_name_key,
        bn.id AS original_name_id,
        n.remarks,
        n.issues
    </sql>

    <sql id="COLS">
      id,
      dataset_key,
      scientific_name,
      rank,
      genus,
      infrageneric_epithet,
      specific_epithet,
      infraspecific_epithet,
      notho,
      original_authors,
      original_year,
      combination_authors,
      combination_year,
      nomenclatural_code,
      status,
      origin,
      type,
      fossil,
      original_name_key,
      remarks,
      issues
    </sql>

    <sql id="PROPS">
      #{id},
      #{dataset.key},
      #{scientificName},
      #{rank}::rank,
      #{genus},
      #{infragenericEpithet},
      #{specificEpithet},
      #{infraspecificEpithet},
      #{notho},
      #{authorship.originalAuthors, typeHandler=org.col.db.type.StringArrayTypeHandler},
      #{authorship.originalYear},
      #{authorship.combinationAuthors, typeHandler=org.col.db.type.StringArrayTypeHandler},
      #{authorship.combinationYear},
      #{nomenclaturalCode},
      #{status},
      #{origin},
      #{type},
      #{fossil},
      #{originalName.key},
      #{remarks},
      #{issues, typeHandler=org.col.db.type.HstoreIssueHandler}::hstore
    </sql>

    <sql id="FROM">
        name n LEFT JOIN name bn ON n.original_name_key=bn.key
    </sql>

    <!--  A mapping to Name, mostly auto mapped -->
    <resultMap id="nameResultMap" type="Name" autoMapping="true">
        <id property="key" column="key" />
        <result property="id" column="id"/>
        <result property="issues" column="issues" typeHandler="org.col.db.type.HstoreIssueHandler"/>
        <association property="authorship" javaType="Authorship">
            <result property="combinationAuthors" column="combination_authors" typeHandler="org.col.db.type.StringArrayTypeHandler"/>
            <result property="combinationYear" column="combination_year"/>
            <result property="originalAuthors" column="original_authors" typeHandler="org.col.db.type.StringArrayTypeHandler"/>
            <result property="originalYear" column="original_year"/>
        </association>
        <association property="dataset" javaType="Dataset">
            <id property="key" column="dataset_key"/>
        </association>
        <association property="originalName" javaType="Name">
            <id property="key" column="original_name_key"/>
            <result property="id" column="original_name_id"/>
        </association>
    </resultMap>



    <select id="count" parameterType="map" resultType="Integer">
        SELECT count(*)
        FROM name
        WHERE dataset_key = #{datasetKey}
    </select>

    <select id="list" parameterType="map" resultMap="nameResultMap">
        SELECT <include refid="SELECT" />
        FROM <include refid="FROM" />
        WHERE n.dataset_key = #{datasetKey}
        ORDER BY key
        <include refid="org.col.db.mapper.Common.limit"/>
    </select>

    <select id="getByKey" resultMap="nameResultMap">
          SELECT <include refid="SELECT" />
          FROM <include refid="FROM" /> WHERE n.key = #{key}
    </select>

    <select id="get" resultMap="nameResultMap">
        SELECT <include refid="SELECT" />
        FROM <include refid="FROM" />
        WHERE n.dataset_key = #{datasetKey} AND n.id = #{id}
    </select>

    <insert id="create" parameterType="Name" useGeneratedKeys="true" keyProperty="key">
        INSERT INTO name (<include refid="COLS" />)
        VALUES (<include refid="PROPS" />)
    </insert>

    <select id="synonymsByKey" resultMap="nameResultMap">
        SELECT <include refid="SELECT" />
        FROM name ns
          JOIN name bn ON ns.original_name_key=bn.key
          JOIN name n ON (n.original_name_key=bn.key OR n.key=bn.key)
        WHERE ns.key = #{key}
    </select>

    <select id="synonyms" resultMap="nameResultMap">
        SELECT <include refid="SELECT" />
        FROM name ns
        JOIN name bn ON ns.original_name_key=bn.key
        JOIN name n ON (n.original_name_key=bn.key OR n.key=bn.key)
        WHERE ns.dataset_key = #{datasetKey} AND ns.id = #{id}
    </select>

</mapper>
