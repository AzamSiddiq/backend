<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.col.db.mapper.NameMapper">

    <sql id="nameCols">
        ${alias}.key AS ${prefix}key,
        ${alias}.id AS ${prefix}id,
        ${alias}.dataset_key AS ${prefix}dataset_key,
        ${alias}.verbatim_key AS ${prefix}verbatim_key,
        ${alias}.homotypic_name_key AS ${prefix}homotypic_name_key,
        ${alias}.scientific_name AS ${prefix}scientific_name,
        ${alias}.rank AS ${prefix}rank,
        ${alias}.uninomial AS ${prefix}uninomial,
        ${alias}.genus AS ${prefix}genus,
        ${alias}.infrageneric_epithet AS ${prefix}infrageneric_epithet,
        ${alias}.specific_epithet AS ${prefix}specific_epithet,
        ${alias}.infraspecific_epithet AS ${prefix}infraspecific_epithet,
        ${alias}.cultivar_epithet AS ${prefix}cultivar_epithet,
        ${alias}.strain AS ${prefix}strain,
        ${alias}.candidatus AS ${prefix}candidatus,
        ${alias}.notho AS ${prefix}notho,
        ${alias}.basionym_authors AS ${prefix}basionym_authors,
        ${alias}.basionym_ex_authors AS ${prefix}basionym_ex_authors,
        ${alias}.basionym_year AS ${prefix}basionym_year,
        ${alias}.combination_authors AS ${prefix}combination_authors,
        ${alias}.combination_ex_authors AS ${prefix}combination_ex_authors,
        ${alias}.combination_year AS ${prefix}combination_year,
        ${alias}.sanctioning_author AS ${prefix}sanctioning_author,
        ${alias}.published_in_key AS ${prefix}published_in_key,
        ${alias}.published_in_page AS ${prefix}published_in_page,
        ${alias}.code AS ${prefix}code,
        ${alias}.nom_status AS ${prefix}nom_status,
        ${alias}.origin AS ${prefix}origin,
        ${alias}.type AS ${prefix}type,
        ${alias}.source_url AS ${prefix}source_url,
        ${alias}.fossil AS ${prefix}fossil,
        ${alias}.remarks AS ${prefix}remarks
    </sql>

    <sql id="SELECT">
        <include refid="nameCols">
            <property name="alias" value="n"/>
            <property name="prefix" value=""/>
        </include>
    </sql>


    <sql id="COLS">
        id,
        dataset_key,
        verbatim_key,
        homotypic_name_key,
        scientific_name,
        rank,
        uninomial,
        genus,
        infrageneric_epithet,
        specific_epithet,
        infraspecific_epithet,
        cultivar_epithet,
        strain,
        candidatus,
        notho,
        basionym_authors,
        basionym_ex_authors,
        basionym_year,
        combination_authors,
        combination_ex_authors,
        combination_year,
        sanctioning_author,
        published_in_key,
        published_in_page,
        code,
        nom_status,
        origin,
        type,
        source_url,
        fossil,
        remarks
    </sql>

    <sql id="PROPS">
        #{id},
        #{datasetKey},
        #{verbatimKey},
        <choose>
            <when test="homotypicNameKey != null">#{homotypicNameKey}</when>
            <otherwise>DEFAULT</otherwise>
        </choose>,
        #{scientificName},
        #{rank}::rank,
        #{uninomial},
        #{genus},
        #{infragenericEpithet},
        #{specificEpithet},
        #{infraspecificEpithet},
        #{cultivarEpithet},
        #{strain},
        #{candidatus},
        #{notho},
        #{basionymAuthorship.authors, typeHandler=org.col.db.type.StringArrayTypeHandler},
        #{basionymAuthorship.exAuthors, typeHandler=org.col.db.type.StringArrayTypeHandler},
        #{basionymAuthorship.year},
        #{combinationAuthorship.authors, typeHandler=org.col.db.type.StringArrayTypeHandler},
        #{combinationAuthorship.exAuthors,
        typeHandler=org.col.db.type.StringArrayTypeHandler},
        #{combinationAuthorship.year},
        #{sanctioningAuthor},
        #{publishedInKey},
        #{publishedInPage},
        #{code},
        #{nomStatus},
        #{origin},
        #{type},
        #{sourceUrl},
        #{fossil},
        #{remarks}
    </sql>

    <sql id="FROM">name n</sql>

     <!-- A mapping to Name, mostly auto mapped -->
    <resultMap id="nameResultMap" type="Name" autoMapping="true">
        <id property="key" column="key" />
        <result property="id" column="id" />
        <association property="combinationAuthorship" javaType="Authorship">
            <result property="authors" column="combination_authors" typeHandler="org.col.db.type.StringArrayTypeHandler" />
            <result property="exAuthors" column="combination_ex_authors" typeHandler="org.col.db.type.StringArrayTypeHandler" />
            <result property="year" column="combination_year" />
        </association>
        <association property="basionymAuthorship" javaType="Authorship">
            <result property="authors" column="basionym_authors" typeHandler="org.col.db.type.StringArrayTypeHandler" />
            <result property="exAuthors" column="basionym_ex_authors" typeHandler="org.col.db.type.StringArrayTypeHandler" />
            <result property="year" column="basionym_year" />
        </association>
    </resultMap>

    <select id="count" resultType="integer">
        <include refid="org.col.db.mapper.Common.countFromFinishedDatasetImport">
            <property name="column" value="name_count"/>
        </include>
    </select>

    <select id="list" resultMap="nameResultMap">
        SELECT <include refid="SELECT" />
        FROM <include refid="FROM" />
        WHERE n.dataset_key = #{datasetKey}
        ORDER BY key
        <include refid="org.col.db.mapper.Common.limit" />
    </select>

    <select id="listByReference" resultMap="nameResultMap">
        SELECT <include refid="SELECT" />
        FROM <include refid="FROM" />
        WHERE n.published_in_key = #{refKey}
        ORDER BY key
    </select>

    <!--  select all names of a dataset
     Using a optimal fetchsize to enable low memory footprint while keeping good performance using a resulthandler
    -->
    <select id="processDataset" parameterType="map" resultMap="nameResultMap" resultOrdered="true"
            fetchSize="10000" resultSetType="FORWARD_ONLY">
        SELECT <include refid="SELECT" />
        FROM <include refid="FROM" />
        WHERE n.dataset_key = #{datasetKey}
    </select>

    <select id="lookupKey" resultType="integer">
        SELECT key
        FROM name
        WHERE id = #{id} AND dataset_key = #{datasetKey}
    </select>

    <select id="get" resultMap="nameResultMap">
        SELECT <include refid="SELECT" />
        FROM <include refid="FROM" />
        WHERE n.key = #{key}
    </select>

    <select id="getByTaxon" resultMap="nameResultMap">
        SELECT <include refid="SELECT" />
        FROM <include refid="FROM" />
            JOIN taxon t ON t.name_key=n.key
        WHERE t.key = #{taxonKey}
    </select>

    <insert id="create" parameterType="Name" useGeneratedKeys="true" keyProperty="key">
        INSERT INTO name (<include refid="COLS" />)
        VALUES (<include refid="PROPS" />)
    </insert>

    <update id="updateHomotypicNameKey" parameterType="Name" useGeneratedKeys="true" keyProperty="key">
        UPDATE name
        SET homotypic_name_key = #{homoKey}
        WHERE key = #{key}
    </update>


    <select id="homotypicGroup" resultMap="nameResultMap">
        SELECT <include refid="SELECT" />
        FROM name ns
          JOIN name n ON n.homotypic_name_key=ns.homotypic_name_key
        WHERE ns.key=#{key}
    </select>

    <select id="indexGroup" resultMap="nameResultMap">
        SELECT <include refid="SELECT" />
        FROM name n
        WHERE n.index_name_Key=#{key}
    </select>

</mapper>
