<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.col.db.mapper.DuplicateMapper">

    <resultMap id="duplicateResultMap" type="Duplicate" autoMapping="true">
        <association property="usage1" columnPrefix="1_">
            <id column="1n_key" />
            <discriminator column="_type1" javaType="string">
                <case value="tax" resultType="Taxon" resultMap="org.col.db.mapper.TaxonMapper.taxonResultMap"/>
                <case value="syn" resultType="Synonym" resultMap="org.col.db.mapper.SynonymMapper.synonymResultMap"/>
            </discriminator>
        </association>
        <association property="usage2" columnPrefix="2_">
            <id column="2n_key" />
            <discriminator column="_type2" javaType="string">
                <case value="tax" resultType="Taxon" resultMap="org.col.db.mapper.TaxonMapper.taxonResultMap"/>
                <case value="syn" resultType="Synonym" resultMap="org.col.db.mapper.SynonymMapper.synonymResultMap"/>
            </discriminator>
        </association>
    </resultMap>



    <select id="find" parameterType="map" resultMap="duplicateResultMap">
        SELECT
        <include refid="org.col.db.mapper.NameMapper.nameCols">
            <property name="alias" value="n1"/>
            <property name="prefix" value="n1_"/>
        </include>,
        <if test="status1 != null and status1.isSynonym()">
            'syn' AS _type1,
            <include refid="org.col.db.mapper.SynonymMapper.synCols">
                <property name="alias" value="s1"/>
                <property name="prefix" value="s1_"/>
            </include>
        </if>
        <if test="status1 == null or !status1.isSynonym()">
            'tax' AS _type1,
            <include refid="org.col.db.mapper.TaxonMapper.taxonCols">
                <property name="alias" value="t1"/>
                <property name="prefix" value="t1_"/>
            </include>
        </if>,

        <include refid="org.col.db.mapper.NameMapper.nameCols">
            <property name="alias" value="n2"/>
            <property name="prefix" value="n2_"/>
        </include>,
        <if test="status2 != null and status2.isSynonym()">
            'syn' AS _type2,
            <include refid="org.col.db.mapper.SynonymMapper.synCols">
                <property name="alias" value="s2"/>
                <property name="prefix" value="s2_"/>
            </include>
        </if>
        <if test="status2 == null or !status2.isSynonym()">
            'tax' AS _type2,
            <include refid="org.col.db.mapper.TaxonMapper.taxonCols">
                <property name="alias" value="t2"/>
                <property name="prefix" value="t2_"/>
            </include>
        </if>

    FROM
        name_${datasetKey} n1
        <if test="status1 != null and status1.isSynonym()">
            JOIN synonym_${datasetKey} s1 ON n1.id=s1.name_id
        </if>
        <if test="status1 == null or !status1.isSynonym()">
            JOIN taxon_${datasetKey} t1 ON n1.id=t1.name_id
        </if>,

        name_${datasetKey} n2
        <if test="status2 != null and status2.isSynonym()">
            JOIN synonym_${datasetKey} s2 ON n2.id=s2.name_id
        </if>
        <if test="status2 == null or !status2.isSynonym()">
            JOIN taxon_${datasetKey} t2 ON n2.id=t2.name_id
        </if>

        <where>
            <choose>
                <when test="mode = 'CANONICAL_WITH_AUTHORS'">
                    n1.scientific_name = n2.scientific_name
                    AND
                    n1.authorship = n2.authorship
                </when>
                <when test="mode = 'CANONICAL'">
                    n1.scientific_name = n2.scientific_name
                </when>
                <otherwise>
                    n1.names_index_id = n2.names_index_id
                </otherwise>
            </choose>
            <if test="rank != null">
                AND n1.rank=#{rank} AND n2.rank=#{rank}
            </if>
            <if test="rank != null">
                AND n1.rank=#{rank} AND n2.rank=#{rank}
            </if>
        </where>
    </select>

</mapper>
