<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.col.db.mapper.DecisionMapper">

  <sql id="DecisionCols">
    ${prefix}subject_id,
    ${prefix}subject_name,
    ${prefix}subject_authorship,
    ${prefix}subject_rank,
    ${prefix}note,
    ${prefix}modified,
    ${prefix}modified_by
  </sql>
  <sql id="DecisionColsAll">
    ${prefix}key,
    ${prefix}dataset_key AS decision_dataset_key,
    <include refid="org.col.db.mapper.DecisionMapper.DecisionCols">
      <property name="prefix" value="${prefix}"/>
    </include>,
    ${prefix}created,
    ${prefix}created_by
  </sql>
  <sql id="DecisionProps">
    #{subject.id},
    #{subject.name},
    #{subject.authorship},
    #{subject.rank}::rank,
    #{note},
    now(),
    #{modifiedBy}
  </sql>

  <sql id="SELECT">
    <include refid="DecisionColsAll">
      <property name="prefix" value="ed."/>
    </include>,
    ed.mode,
    ed.status,
    ed.name
  </sql>

  <sql id="COLS">
    dataset_key,
    <include refid="DecisionCols">
      <property name="prefix" value=""/>
    </include>,
    mode,
    status,
    name
  </sql>

  <sql id="PROPS">
    #{datasetKey},
    <include refid="DecisionProps" />,
    #{mode},
    #{status},
    #{name, typeHandler=org.col.db.type2.NameJsonHandler}::jsonb
  </sql>

  <sql id="FROM">
    decision ed
  </sql>

  <resultMap id="decisionResultMap" type="EditorialDecision" autoMapping="true">
    <id property="key" column="key" />
    <result property="datasetKey" column="decision_dataset_key" />
    <result property="name" column="name" typeHandler="org.col.db.type2.NameJsonHandler" />
    <association property="subject" javaType="SimpleName" resultMap="org.col.db.mapper.SectorMapper.refResultMap" columnPrefix="subject_" />
  </resultMap>

  <select id="listByDataset" resultMap="decisionResultMap">
    SELECT <include refid="SELECT" />
    FROM <include refid="FROM" />
    WHERE dataset_key = #{key}
    ORDER BY key
  </select>

  <select id="get" resultMap="decisionResultMap">
    SELECT <include refid="SELECT" />
    FROM <include refid="FROM" />
    WHERE key = #{key}
  </select>

  <insert id="create" parameterType="Sector" useGeneratedKeys="true" keyProperty="key">
    INSERT INTO decision ( <include refid="COLS" />, created_by )
    VALUES ( <include refid="PROPS" />, #{createdBy} )
  </insert>

  <update id="update" parameterType="Sector">
    UPDATE decision
    SET (<include refid="COLS" />) = (<include refid="PROPS" />)
    WHERE key = #{key}
  </update>

  <delete id="delete" parameterType="map">
    DELETE FROM decision
    WHERE key = #{key}
  </delete>

  <select id="subjectBroken" resultMap="decisionResultMap">
    SELECT <include refid="SELECT" />
    FROM <include refid="FROM" />
      LEFT JOIN taxon t ON t.dataset_key=ed.dataset_key AND t.id=ed.subject_id
    WHERE t.id IS NULL
    <if test="key != null">
      AND ed.dataset_key = #{key}
    </if>
    ORDER BY ed.key
  </select>

</mapper>
