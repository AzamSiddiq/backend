<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.col.db.mapper.DatasetPartitionMapper">

    <update id="create" parameterType="map">
        CREATE TABLE verbatim_${key} (LIKE verbatim INCLUDING DEFAULTS INCLUDING CONSTRAINTS);
        CREATE TABLE reference_${key} (LIKE reference INCLUDING DEFAULTS INCLUDING CONSTRAINTS);
        CREATE TABLE name_${key} (LIKE name INCLUDING DEFAULTS INCLUDING CONSTRAINTS);
        CREATE TABLE name_rel_${key} (LIKE name_rel INCLUDING DEFAULTS INCLUDING CONSTRAINTS);
        CREATE TABLE name_usage_${key} (LIKE name_usage INCLUDING DEFAULTS INCLUDING CONSTRAINTS);
        CREATE TABLE usage_reference_${key} (LIKE usage_reference INCLUDING DEFAULTS INCLUDING CONSTRAINTS);
        CREATE TABLE description_${key} (LIKE description INCLUDING DEFAULTS INCLUDING CONSTRAINTS);
        CREATE TABLE distribution_${key} (LIKE distribution INCLUDING DEFAULTS INCLUDING CONSTRAINTS);
        CREATE TABLE media_${key} (LIKE media INCLUDING DEFAULTS INCLUDING CONSTRAINTS);
        CREATE TABLE vernacular_name_${key} (LIKE vernacular_name INCLUDING DEFAULTS INCLUDING CONSTRAINTS);

        CREATE TRIGGER name_trigger_${key} BEFORE INSERT OR UPDATE
        ON name_${key} FOR EACH ROW
        WHEN (NEW.homotypic_name_id IS NULL)
        EXECUTE PROCEDURE homotypic_name_id_default();
    </update>

    <update id="attach" parameterType="map">
        ALTER TABLE verbatim ATTACH PARTITION verbatim_${key} FOR VALUES IN ( ${key} );
        ALTER TABLE reference ATTACH PARTITION reference_${key} FOR VALUES IN ( ${key} );
        ALTER TABLE name ATTACH PARTITION name_${key} FOR VALUES IN ( ${key} );
        ALTER TABLE name_rel ATTACH PARTITION name_rel_${key} FOR VALUES IN ( ${key} );
        ALTER TABLE name_usage ATTACH PARTITION name_usage_${key} FOR VALUES IN ( ${key} );
        ALTER TABLE usage_reference ATTACH PARTITION usage_reference_${key} FOR VALUES IN ( ${key} );
        ALTER TABLE distribution ATTACH PARTITION distribution_${key} FOR VALUES IN ( ${key} );
        ALTER TABLE description ATTACH PARTITION description_${key} FOR VALUES IN ( ${key} );
        ALTER TABLE vernacular_name ATTACH PARTITION vernacular_name_${key} FOR VALUES IN ( ${key} );
        ALTER TABLE media ATTACH PARTITION media_${key} FOR VALUES IN ( ${key} );
    </update>

    <update id="buildIndices" parameterType="map">
        ALTER TABLE verbatim_${key} ADD PRIMARY KEY (key);
        CREATE index ON verbatim_${key} USING GIN(issues);
        CREATE INDEX ON verbatim_${key} (type);
        CREATE INDEX ON verbatim_${key} USING GIN (terms jsonb_path_ops);

        ALTER TABLE reference_${key} ADD PRIMARY KEY (id);
        CREATE index ON reference_${key} (verbatim_key);
        CREATE index ON reference_${key} (sector_key);
        ALTER TABLE reference_${key} ADD CONSTRAINT reference_${key}_sector_fk FOREIGN KEY (sector_key) REFERENCES sector (key);

        ALTER TABLE name_${key} ADD PRIMARY KEY (id);
        CREATE index ON name_${key} (verbatim_key);
        CREATE index ON name_${key} (homotypic_name_id);
        CREATE index ON name_${key} (name_index_id);
        CREATE index ON name_${key} (published_in_id);
        CREATE index ON name_${key} (sector_key);
        ALTER TABLE name_${key} ADD CONSTRAINT name_${key}_publishedin_id_fk FOREIGN KEY (published_in_id) REFERENCES reference_${key} (id);

        ALTER TABLE name_rel_${key} ADD PRIMARY KEY (key);
        CREATE index ON name_rel_${key} (name_id, type);
        CREATE index ON name_rel_${key} (verbatim_key);
        ALTER TABLE name_rel_${key} ADD CONSTRAINT name_rel_${key}_name_id_fk FOREIGN KEY (name_id) REFERENCES name_${key} (id);
        ALTER TABLE name_rel_${key} ADD CONSTRAINT name_rel_${key}_related_name_id_fk FOREIGN KEY (related_name_id) REFERENCES name_${key} (id);

        ALTER TABLE name_usage_${key} ADD PRIMARY KEY (id);
        CREATE index ON name_usage_${key} (parent_id);
        CREATE index ON name_usage_${key} (name_id);
        CREATE index ON name_usage_${key} (verbatim_key);
        CREATE index ON name_usage_${key} (sector_key);
        ALTER TABLE name_usage_${key} ADD CONSTRAINT name_usage_${key}_parent_id_fk FOREIGN KEY (parent_id) REFERENCES name_usage_${key} (id);
        ALTER TABLE name_usage_${key} ADD CONSTRAINT name_usage_${key}_name_id_fk FOREIGN KEY (name_id) REFERENCES name_${key} (id);
        ALTER TABLE name_usage_${key} ADD CONSTRAINT name_usage_${key}_sector_fk FOREIGN KEY (sector_key) REFERENCES sector (key);

        CREATE index ON usage_reference_${key} (taxon_id);

        ALTER TABLE description_${key} ADD PRIMARY KEY (key);
        CREATE index ON description_${key} (taxon_id);
        CREATE index ON description_${key} (verbatim_key);
        ALTER TABLE description_${key} ADD CONSTRAINT description_${key}_taxon_id_fk FOREIGN KEY (taxon_id) REFERENCES name_usage_${key} (id) ON DELETE CASCADE;

        ALTER TABLE distribution_${key} ADD PRIMARY KEY (key);
        CREATE index ON distribution_${key} (taxon_id);
        CREATE index ON distribution_${key} (verbatim_key);
        ALTER TABLE distribution_${key} ADD CONSTRAINT distribution_${key}_taxon_id_fk FOREIGN KEY (taxon_id) REFERENCES name_usage_${key} (id) ON DELETE CASCADE;

        ALTER TABLE media_${key} ADD PRIMARY KEY (key);
        CREATE index ON media_${key} (taxon_id);
        CREATE index ON media_${key} (verbatim_key);
        ALTER TABLE media_${key} ADD CONSTRAINT media_${key}_taxon_id_fk FOREIGN KEY (taxon_id) REFERENCES name_usage_${key} (id) ON DELETE CASCADE;

        ALTER TABLE vernacular_name_${key} ADD PRIMARY KEY (key);
        CREATE index ON vernacular_name_${key} (taxon_id);
        CREATE index ON vernacular_name_${key} (verbatim_key);
        ALTER TABLE vernacular_name_${key} ADD CONSTRAINT vernacular_name_${key}_taxon_id_fk FOREIGN KEY (taxon_id) REFERENCES name_usage_${key} (id) ON DELETE CASCADE;
    </update>

    <update id="delete" parameterType="map">
        DROP TABLE IF EXISTS description_${key};
        DROP TABLE IF EXISTS distribution_${key};
        DROP TABLE IF EXISTS media_${key};
        DROP TABLE IF EXISTS vernacular_name_${key};
        DROP TABLE IF EXISTS usage_reference_${key};
        DROP TABLE IF EXISTS name_usage_${key};
        DROP TABLE IF EXISTS name_rel_${key};
        DROP TABLE IF EXISTS name_${key};
        DROP TABLE IF EXISTS reference_${key};
        DROP TABLE IF EXISTS verbatim_${key};
    </update>

</mapper>
