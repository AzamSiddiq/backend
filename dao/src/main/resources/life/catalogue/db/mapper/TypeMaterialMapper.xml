<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="life.catalogue.db.mapper.TypeMaterialMapper">

  <sql id="SELECT">
    id,
    dataset_key,
    sector_key,
    verbatim_key,
    name_id,
    citation,
    status,
    locality,
    country,
    latitude,
    longitude,
    altitude,
    host,
    date,
    collector,
    reference_id,
    link,
    remarks,
    created,
    created_by,
    modified,
    modified_by
  </sql>

  <sql id="COLS">
    dataset_key,
    sector_key,
    <include refid="COLS_COPY">
      <property name="alias" value=""/>
    </include>
  </sql>

  <sql id="COLS_COPY">
    ${alias}id,
    ${alias}verbatim_key,
    ${alias}name_id,
    ${alias}citation,
    ${alias}status,
    ${alias}locality,
    ${alias}country,
    ${alias}latitude,
    ${alias}longitude,
    ${alias}altitude,
    ${alias}host,
    ${alias}date,
    ${alias}collector,
    ${alias}reference_id,
    ${alias}link,
    ${alias}remarks,
    ${alias}created_by,
    ${alias}modified_by
  </sql>

  <sql id="PROPS">
    #{datasetKey},
    #{sectorKey},
    #{id},
    #{verbatimKey},
    #{nameId},
    #{citation},
    #{status}::TYPESTATUS,
    #{locality},
    #{country},
    #{latitude},
    #{longitude},
    #{altitude},
    #{host},
    #{date},
    #{collector},
    #{referenceId},
    #{link},
    #{remarks},
    #{createdBy},
    #{modifiedBy}
  </sql>

  <sql id="FROM">
    type_material_${partition}
  </sql>

  <resultMap id="typeResultMap" type="TypeMaterial" autoMapping="true">
    <id property="id" column="id"/>
  </resultMap>

  <select id="listByName" resultMap="typeResultMap">
    <include refid="life.catalogue.db.Common.partitionByKey"/>
    SELECT
    <include refid="SELECT"/>
    FROM
    <include refid="FROM"/>
    WHERE name_id = #{key.id}
    ORDER BY id
  </select>

  <select id="get" resultMap="typeResultMap">
    <include refid="life.catalogue.db.Common.partitionByKey"/>
    SELECT
    <include refid="SELECT"/>
    FROM
    <include refid="FROM"/>
    WHERE id = #{key.id}
  </select>

  <insert id="create" parameterType="TypeMaterial" keyProperty="id">
    <include refid="life.catalogue.db.Common.partitionByDatasetKey"/>
    INSERT INTO type_material_${partition} (<include refid="COLS"/>, created, modified)
    VALUES (<include refid="PROPS"/>, now(), now())
  </insert>

  <insert id="copyDataset" parameterType="map">
    INSERT INTO type_material_${newDatasetKey} (dataset_key,sector_key,<include refid="COLS_COPY"><property name="alias" value=""/></include>, created, modified)
    SELECT #{newDatasetKey}, s.id, <include refid="COLS_COPY"><property name="alias" value="t."/></include>, t.created, t.modified
    FROM type_material_${datasetKey} t LEFT JOIN sector s ON s.copied_from_id=t.sector_key AND s.dataset_key=#{newDatasetKey}
  </insert>

  <update id="update" parameterType="TypeMaterial" keyProperty="id">
    <include refid="life.catalogue.db.Common.partitionByDatasetKey"/>
    UPDATE type_material_${partition}
    SET (<include refid="COLS"/>, created, modified) = (<include refid="PROPS"/>, now(), now())
    WHERE id = #{id} AND dataset_key=#{datasetKey}
  </update>

  <delete id="delete" parameterType="map">
    <include refid="life.catalogue.db.Common.partitionByKey"/>
    DELETE FROM type_material_${partition}
    WHERE id = #{key.id} AND dataset_key=#{key.datasetKey}
  </delete>

  <select id="processDataset" parameterType="map" resultMap="typeResultMap" resultOrdered="true" fetchSize="10000" resultSetType="FORWARD_ONLY">
    <include refid="life.catalogue.db.Common.partitionByDatasetKey"/>
    SELECT <include refid="SELECT"/>
    FROM <include refid="FROM"/>
  </select>

  <select id="processSector" parameterType="map" resultMap="typeResultMap" resultOrdered="true" fetchSize="1000" resultSetType="FORWARD_ONLY">
    <include refid="life.catalogue.db.Common.partitionByDatasetKey"/>
    SELECT <include refid="SELECT"/>
    FROM <include refid="FROM"/>
    WHERE sector_key = #{sectorKey}
  </select>

  <delete id="deleteBySector" parameterType="map">
    <include refid="life.catalogue.db.Common.partitionByDatasetKey"/>
    DELETE FROM type_material_${partition}
    WHERE sector_key=#{sectorKey} AND dataset_key=#{datasetKey}
  </delete>

  <update id="removeSectorKey" parameterType="map">
    <include refid="life.catalogue.db.Common.partitionByDatasetKey"/>
    UPDATE type_material_${partition} SET sector_key = NULL
    WHERE sector_key = #{sectorKey}
  </update>

</mapper>
