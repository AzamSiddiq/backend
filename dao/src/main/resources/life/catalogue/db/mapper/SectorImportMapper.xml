<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="life.catalogue.db.mapper.SectorImportMapper">

  <sql id="SELECT">
    si.state,
    si.type,
    si.sector_key,
    si.attempt,
    si.warnings,
    <include refid="life.catalogue.db.mapper.DatasetImportMapper.metricsCols">
      <property name="alias" value="si."/>
    </include>
  </sql>

  <sql id="COLS">
    state,
    type,
    sector_key,
    attempt,
    warnings,
    <include refid="life.catalogue.db.mapper.DatasetImportMapper.metricsCols">
      <property name="alias" value=""/>
    </include>
  </sql>

  <sql id="PROPS">
    #{imp.state}::SECTORIMPORT_STATE,
    #{imp.type},
    #{imp.sectorKey},
    #{imp.attempt},
    #{imp.warnings, typeHandler=life.catalogue.db.type2.StringCollectionArrayTypeHandler},
    <include refid="life.catalogue.db.mapper.DatasetImportMapper.metricsProps"/>
  </sql>

  <sql id="FROM">
    sector_import si
    <if test="subjectDatasetKey != null or datasetKey != null">
      JOIN sector s ON s.id=si.sector_key
    </if>
  </sql>

  <sql id="WHERE">
    <where>
      <if test="sectorKey != null">
        si.sector_key = #{sectorKey}
      </if>
      <if test="datasetKey != null">
        AND s.dataset_key = #{datasetKey}
      </if>
      <if test="subjectDatasetKey != null">
        AND s.subject_dataset_key = #{subjectDatasetKey}
      </if>
      <if test="states != null &amp;&amp; !states.isEmpty()">
        AND si.state IN
        <foreach item="state" collection="states" open="(" separator="," close=")">
          #{state}::SECTORIMPORT_STATE
        </foreach>
      </if>
    </where>
  </sql>

  <!--  A mapping to Name, mostly auto mapped -->
  <resultMap id="sectorImportResultMap" type="SectorImport" autoMapping="true">
    <result property="issueCount" column="issue_count" typeHandler="life.catalogue.db.type2.HstoreIssueCountTypeHandler"/>
    <result property="warnings" column="warnings" typeHandler="life.catalogue.db.type2.StringCollectionArrayTypeHandler"/>
    <result property="names" column="names" typeHandler="life.catalogue.db.type2.StringSetTypeHandler"/>
  </resultMap>

  <select id="get" resultMap="sectorImportResultMap">
    SELECT
    <include refid="SELECT"/>
    FROM sector_import si
    WHERE sector_key=#{sectorKey} AND attempt=#{attempt}
  </select>

  <select id="count" resultType="integer">
    SELECT count(*)
    FROM
    <include refid="FROM"/>
    <include refid="WHERE"/>
  </select>

  <select id="list" resultMap="sectorImportResultMap">
    SELECT
    <include refid="SELECT"/>
    FROM
    <include refid="FROM"/>
    <include refid="WHERE"/>
    ORDER BY started DESC, sector_key ASC, attempt DESC
    <include refid="life.catalogue.db.Common.limit"/>
  </select>

  <insert id="create" parameterType="SectorImport">
    INSERT INTO sector_import (<include refid="COLS"/>)
    VALUES (<include refid="PROPS"/>)
  </insert>

  <delete id="delete" parameterType="map">
    DELETE FROM sector_import
    WHERE sector_key=#{key}
  </delete>

  <select id="countDescription" resultType="integer">
    SELECT count(*)
    FROM description_${datasetKey} x
    JOIN name_usage_${datasetKey} t ON t.id=x.taxon_id
    WHERE t.sector_key=${sectorKey}
  </select>
  <select id="countDistribution" resultType="integer">
    SELECT count(*)
    FROM distribution_${datasetKey} x
    JOIN name_usage_${datasetKey} t ON t.id=x.taxon_id
    WHERE t.sector_key=${sectorKey}
  </select>
  <select id="countMedia" resultType="integer">
    SELECT count(*)
    FROM media_${datasetKey} x
    JOIN name_usage_${datasetKey} t ON t.id=x.taxon_id
    WHERE t.sector_key=${sectorKey}
  </select>
  <select id="countVernacular" resultType="integer">
    SELECT count(*)
    FROM vernacular_name_${datasetKey} x
    JOIN name_usage_${datasetKey} t ON t.id=x.taxon_id
    WHERE t.sector_key=${sectorKey}
  </select>

  <select id="countName" resultType="integer">
    SELECT count(*) FROM name_${datasetKey} WHERE sector_key=${sectorKey}
  </select>
  <select id="countReference" resultType="integer">
    SELECT count(*) FROM reference_${datasetKey} WHERE sector_key=${sectorKey}
  </select>
  <select id="countTaxon" resultType="integer">
    SELECT count(*) FROM name_usage_${datasetKey} WHERE NOT is_synonym AND sector_key=${sectorKey}
  </select>
  <select id="countSynonym" resultType="integer">
    SELECT count(*) FROM name_usage_${datasetKey} WHERE is_synonym AND sector_key=${sectorKey}
  </select>

  <select id="countIssues" resultType="StringCount">
    WITH issues AS (
    SELECT vn.id, vn.issues
    FROM verbatim_${datasetKey} vn
    JOIN name_${datasetKey} n ON vn.id=n.verbatim_key
    WHERE n.sector_key=${sectorKey}
    UNION
    SELECT vt.id, vt.issues
    FROM verbatim_${datasetKey} vt
    JOIN name_usage_${datasetKey} t ON vt.id=t.verbatim_key
    WHERE t.sector_key=${sectorKey}
    UNION
    SELECT vr.id, vr.issues
    FROM verbatim_${datasetKey} vr
    JOIN reference_${datasetKey} r ON vr.id=r.verbatim_key
    WHERE r.sector_key=${sectorKey}
    )
    SELECT iss AS key, count(*) AS count FROM (
    SELECT unnest(issues) iss FROM issues
    ) AS dis
    GROUP BY iss
  </select>


  <select id="countDistributionsByGazetteer" resultType="StringCount">
    SELECT gazetteer AS key, count(*) AS count
    FROM distribution_${datasetKey} x
    JOIN name_usage_${datasetKey} u ON u.id=x.taxon_id
    WHERE u.sector_key=${sectorKey}
    GROUP BY gazetteer
  </select>
  <select id="countMediaByType" resultType="StringCount">
    SELECT type AS key, count(*) AS count
    FROM media_${datasetKey} x
    JOIN name_usage_${datasetKey} u ON u.id=x.taxon_id
    WHERE u.sector_key=${sectorKey}
    GROUP BY type
  </select>
  <select id="countNamesByType" resultType="StringCount">
    SELECT type AS key, count(*) AS count
    FROM name_${datasetKey}
    WHERE sector_key=${sectorKey}
    GROUP BY type
  </select>
  <select id="countNameRelationsByType" resultType="StringCount">
    SELECT r.type AS key, count(*) AS count
    FROM name_rel_${datasetKey} r
    JOIN name_${datasetKey} n ON r.name_id=n.id
    WHERE n.sector_key=${sectorKey}
    GROUP BY r.type
  </select>
  <select id="countNamesByStatus" resultType="StringCount">
    SELECT nom_status AS key, count(*) AS count
    FROM name_${datasetKey}
    WHERE sector_key=${sectorKey}
    GROUP BY nom_status
  </select>
  <select id="countNamesByOrigin" resultType="StringCount">
    SELECT origin AS key, count(*) AS count
    FROM name_${datasetKey}
    WHERE sector_key=${sectorKey}
    GROUP BY origin
  </select>
  <select id="countNamesByRank" resultType="StringCount">
    SELECT rank AS key, count(*) AS count
    FROM name_${datasetKey}
    WHERE sector_key=${sectorKey}
    GROUP BY rank
  </select>
  <select id="countTaxaByRank" resultType="StringCount">
    SELECT n.rank AS key, count(*) AS count
    FROM name_usage_${datasetKey} t JOIN name_${datasetKey} n ON t.name_id=n.id
    WHERE NOT t.is_synonym AND t.sector_key=${sectorKey}
    GROUP BY n.rank
  </select>
  <select id="countUsagesByStatus" resultType="StringCount">
    SELECT status AS key, count(*) AS count
    FROM name_usage_${datasetKey}
    WHERE sector_key=${sectorKey}
    GROUP BY status
  </select>
  <select id="countVernacularsByLanguage" resultType="StringCount">
    SELECT language AS key, count(*) AS count
    FROM vernacular_name_${datasetKey} x
    JOIN name_usage_${datasetKey} u ON u.id=x.taxon_id
    WHERE u.sector_key=${sectorKey}
    GROUP BY language
  </select>
</mapper>
