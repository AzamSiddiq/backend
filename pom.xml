<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>org.col</groupId>
  <artifactId>colplus-motherpom</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>CoL backend services</name>
  <url>http://github.org/Sp2000/${project.artifactId}</url>

  <scm>
    <connection>scm:git:git@github.com:Sp2000/colplus-backend.git</connection>
    <url>https://github.com/Sp2000/colplus-backend</url>
    <developerConnection>scm:git:git@github.com:Sp2000/colplus-backend.git</developerConnection>
    <tag>HEAD</tag>
  </scm>

  <prerequisites>
    <maven>${minimumMavenVersion}</maven>
  </prerequisites>

  <properties>
    <!-- build settings -->
    <minimumMavenVersion>3.3</minimumMavenVersion>
    <jdkLevel>1.8</jdkLevel>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <!-- Library dependencies
        Check for available updates: mvn versions:display-dependency-updates
    -->
    <commmons-lang.version>3.5</commmons-lang.version>
    <dropwizard.version>1.1.4</dropwizard.version>
    <dwc-api.version>1.17</dwc-api.version>
    <dwca-io.version>1.31</dwca-io.version>
    <fastutil.version>8.1.0</fastutil.version>
    <gbif-api.version>0.48</gbif-api.version>
    <gbif-common.version>0.36</gbif-common.version>
    <gbif-parser.version>0.31</gbif-parser.version>
    <guava.version>21.0</guava.version>
    <hikaricp.version>2.7.1</hikaricp.version>
    <hk2.version>2.5.0-b32</hk2.version>
    <!-- make sure jackson matches dropwizards version -->
    <jackson2.version>2.8.10</jackson2.version>
    <javax.ws.rs-api.version>2.0.1</javax.ws.rs-api.version>
    <javers.version>3.7.5</javers.version>
    <!-- make sure jersey matches dropwizards version -->
    <jersey.version>2.25.1</jersey.version>
    <jsr305.version>3.0.2</jsr305.version>
    <junit.version>4.12</junit.version>
    <kryo.version>4.0.1</kryo.version>
    <kryo-serializers.version>0.42</kryo-serializers.version>
    <logback.version>1.2.3</logback.version>
    <logstash-logback.version>4.11</logstash-logback.version>
    <mapdb.version>3.0.5</mapdb.version>
    <mockito.version>2.12.0</mockito.version>
    <mybatis.version>3.4.5</mybatis.version>
    <name-parser.version>3.0-SNAPSHOT</name-parser.version>
    <neo4j.version>3.2.3</neo4j.version>
    <postgresql.version>42.1.4</postgresql.version>
    <postgresql-embedded.version>2.5</postgresql-embedded.version>
    <slf4j.version>1.7.24</slf4j.version>
    <validation-api.version>2.0.0.Final</validation-api.version>

      <!-- Maven plugin versions.
          Check for available updates: mvn versions:display-plugin-updates
      -->
    <exec-maven-plugin.version>1.2.1</exec-maven-plugin.version>
    <maven-clean-plugin.version>3.0.0</maven-clean-plugin.version>
    <maven-compiler-plugin.version>3.6.1</maven-compiler-plugin.version>
    <maven-dependency-plugin.version>3.0.1</maven-dependency-plugin.version>
    <maven-enforcer-plugin.version>1.4.1</maven-enforcer-plugin.version>
    <maven-install-plugin.version>2.5.2</maven-install-plugin.version>
    <maven-jar-plugin.version>3.0.2</maven-jar-plugin.version>
    <maven-release-plugin.version>2.5.3</maven-release-plugin.version>
    <maven-resources-plugin.version>3.0.2</maven-resources-plugin.version>
    <maven-shade-plugin.version>3.0.0</maven-shade-plugin.version>
    <maven-source-plugin.version>3.0.1</maven-source-plugin.version>
    <maven-surefire-plugin.version>2.20</maven-surefire-plugin.version>
    <versions-maven-plugin.version>2.4</versions-maven-plugin.version>

    <!--
    default maven properties to define the postgres server for running tests
    host=null indicates an embedded postgres

    To use a different server please activate a personal profile
    -->
    <pg-test.host>null</pg-test.host>
    <pg-test.database>colplus</pg-test.database>
    <pg-test.user>postgres</pg-test.user>
    <pg-test.password>postgres</pg-test.password>
  </properties>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>https://raw.github.com/gbif/motherpom/master/LICENSE</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <organization>
    <name>Species 2000</name>
    <url>http://www.sp2000.org/</url>
  </organization>

  <issueManagement>
    <system>github</system>
    <url>https://github.com/Sp2000/colplus-backend/issues</url>
  </issueManagement>

  <repositories>
    <repository>
      <id>gbif-all</id>
      <url>http://repository.gbif.org/content/groups/gbif</url>
    </repository>
  </repositories>

  <modules>
    <module>colplus-api</module>
    <module>colplus-common</module>
    <module>colplus-common-dw</module>
    <module>colplus-cli</module>
    <module>colplus-dao</module>
    <module>colplus-dwca</module>
    <module>colplus-parser</module>
    <module>colplus-ws</module>
  </modules>

  <distributionManagement>
    <repository>
      <id>gbif-release</id>
      <url>http://repository.gbif.org/content/repositories/releases</url>
    </repository>
    <snapshotRepository>
      <id>gbif-snapshot</id>
      <url>http://repository.gbif.org/content/repositories/snapshots</url>
    </snapshotRepository>
  </distributionManagement>

  <dependencyManagement>
    <dependencies>
	    <!-- Colplus -->
	    <dependency>
	      <groupId>org.col</groupId>
	      <artifactId>colplus-api</artifactId>
          <version>${project.version}</version>
	    </dependency>
        <dependency>
            <groupId>org.col</groupId>
            <artifactId>colplus-api</artifactId>
            <version>${project.version}</version>
            <classifier>tests</classifier>
            <scope>test</scope>
        </dependency>
        <dependency>
	      <groupId>org.col</groupId>
	      <artifactId>colplus-common</artifactId>
          <version>${project.version}</version>
	    </dependency>
        <dependency>
            <groupId>org.col</groupId>
            <artifactId>colplus-common-dw</artifactId>
            <version>${project.version}</version>
        </dependency>
	    <dependency>
	      <groupId>org.col</groupId>
	      <artifactId>colplus-dao</artifactId>
          <version>${project.version}</version>
	    </dependency>
        <dependency>
            <groupId>org.col</groupId>
            <artifactId>colplus-dao</artifactId>
            <version>${project.version}</version>
            <classifier>tests</classifier>
            <scope>test</scope>
        </dependency>
        <dependency>
	      <groupId>org.col</groupId>
	      <artifactId>colplus-dwca</artifactId>
          <version>${project.version}</version>
	    </dependency>
        <dependency>
            <groupId>org.col</groupId>
            <artifactId>colplus-parser</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!-- Dropwizard Bill of materials. Imports all versions just like Dropwizard uses -->
        <dependency>
            <groupId>io.dropwizard</groupId>
            <artifactId>dropwizard-core</artifactId>
            <version>${dropwizard.version}</version>
        </dependency>
        <dependency>
            <groupId>io.dropwizard</groupId>
            <artifactId>dropwizard-client</artifactId>
            <version>${dropwizard.version}</version>
        </dependency>
        <dependency>
            <groupId>io.dropwizard</groupId>
            <artifactId>dropwizard-forms</artifactId>
            <version>${dropwizard.version}</version>
        </dependency>
        <dependency>
            <groupId>io.dropwizard</groupId>
            <artifactId>dropwizard-bom</artifactId>
            <version>${dropwizard.version}</version>
            <type>pom</type>
            <scope>import</scope>
        </dependency>

        <!-- jersey -->
        <dependency>
            <groupId>org.glassfish.jersey.ext.rx</groupId>
            <artifactId>jersey-rx-client-java8</artifactId>
            <version>${jersey.version}</version>
        </dependency>

        <!-- HK2 dependency injection - follow closely the version used by Jersey via Dropwizard -->
        <dependency>
            <groupId>org.glassfish.hk2</groupId>
            <artifactId>hk2-api</artifactId>
            <version>${hk2.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.hk2</groupId>
            <artifactId>hk2-locator</artifactId>
            <version>${hk2.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.hk2</groupId>
            <artifactId>hk2-utils</artifactId>
            <version>${hk2.version}</version>
        </dependency>

        <!-- javax -->
        <dependency>
            <groupId>javax.ws.rs</groupId>
            <artifactId>javax.ws.rs-api</artifactId>
            <version>${javax.ws.rs-api.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <version>${validation-api.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
            <version>${jsr305.version}</version>
        </dependency>

        <!-- GBIF -->
        <dependency>
            <groupId>org.gbif</groupId>
            <artifactId>dwc-api</artifactId>
            <version>${dwc-api.version}</version>
        </dependency>
        <dependency>
            <groupId>org.gbif</groupId>
            <artifactId>gbif-api</artifactId>
            <version>${gbif-api.version}</version>
        </dependency>
        <dependency>
            <groupId>org.gbif</groupId>
            <artifactId>name-parser-api</artifactId>
            <version>${name-parser.version}</version>
        </dependency>
        <dependency>
            <groupId>org.gbif</groupId>
            <artifactId>name-parser</artifactId>
            <version>${name-parser.version}</version>
        </dependency>
        <dependency>
            <groupId>org.gbif</groupId>
            <artifactId>gbif-parsers</artifactId>
            <version>${gbif-parser.version}</version>
        </dependency>
        <dependency>
            <groupId>org.gbif</groupId>
            <artifactId>dwca-io</artifactId>
            <version>${dwca-io.version}</version>
            <exclusions>
                <exclusion>
                    <!-- digester via cglib brings in an old asm version, conflicting with kryo -->
                    <artifactId>asm</artifactId>
                    <groupId>asm</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- mybatis / DB -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${postgresql.version}</version>
        </dependency>
        <dependency>
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
            <version>${hikaricp.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis</artifactId>
            <version>${mybatis.version}</version>
        </dependency>

        <!-- neo4j -->
        <dependency>
            <groupId>org.neo4j</groupId>
            <artifactId>neo4j</artifactId>
            <version>${neo4j.version}</version>
            <exclusions>
                <exclusion>
                    <!-- turn off usage reporting to normalizer -->
                    <groupId>org.neo4j</groupId>
                    <artifactId>neo4j-udc</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.neo4j</groupId>
            <artifactId>neo4j-kernel</artifactId>
            <version>${neo4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.neo4j</groupId>
            <artifactId>neo4j-cypher</artifactId>
            <version>${neo4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.neo4j</groupId>
            <artifactId>neo4j-shell</artifactId>
            <version>${neo4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.neo4j</groupId>
            <artifactId>neo4j-slf4j</artifactId>
            <version>${neo4j.version}</version>
        </dependency>

        <!-- mapdb & kryo-->
        <dependency>
            <groupId>org.mapdb</groupId>
            <artifactId>mapdb</artifactId>
            <version>${mapdb.version}</version>
        </dependency>
        <!-- we use kryo to serialize data into binary which is > 10 times faster than jackson even with smile -->
        <dependency>
            <groupId>com.esotericsoftware</groupId>
            <artifactId>kryo</artifactId>
            <version>${kryo.version}</version>
        </dependency>
        <dependency>
            <groupId>de.javakaffee</groupId>
            <artifactId>kryo-serializers</artifactId>
            <version>${kryo-serializers.version}</version>
        </dependency>

	    <!-- logging -->
	    <dependency>
	      <groupId>org.slf4j</groupId>
	      <artifactId>slf4j-api</artifactId>
	      <version>${slf4j.version}</version>
	    </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>
        <dependency>
            <groupId>net.logstash.logback</groupId>
            <artifactId>logstash-logback-encoder</artifactId>
            <version>${logstash-logback.version}</version>
        </dependency>

        <!-- JACKSON2 -->
	    <dependency>
	      <groupId>com.fasterxml.jackson.core</groupId>
	      <artifactId>jackson-databind</artifactId>
	      <version>${jackson2.version}</version>
	    </dependency>
	    <dependency>
	      <groupId>com.fasterxml.jackson.core</groupId>
	      <artifactId>jackson-annotations</artifactId>
	      <version>${jackson2.version}</version>
	    </dependency>
	    <dependency>
	      <groupId>com.fasterxml.jackson.dataformat</groupId>
	      <artifactId>jackson-dataformat-yaml</artifactId>
	      <version>${jackson2.version}</version>
	    </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-xml</artifactId>
            <version>${jackson2.version}</version>
        </dependency>

	    <!-- other -->
	    <dependency>
	      <groupId>org.apache.commons</groupId>
	      <artifactId>commons-lang3</artifactId>
	      <version>${commmons-lang.version}</version>
	    </dependency>
	    <dependency>
	      <groupId>com.google.guava</groupId>
	      <artifactId>guava</artifactId>
	      <version>${guava.version}</version>
	    </dependency>
	    <dependency>
	      <groupId>it.unimi.dsi</groupId>
	      <artifactId>fastutil</artifactId>
	      <version>${fastutil.version}</version>
	    </dependency>
        <dependency>
          <groupId>org.javers</groupId>
          <artifactId>javers-core</artifactId>
          <version>${javers.version}</version>
        </dependency>

	    <!-- TEST SCOPE -->
	    <dependency>
	      <groupId>junit</groupId>
	      <artifactId>junit</artifactId>
	      <version>${junit.version}</version>
	      <scope>test</scope>
	    </dependency>
	    <dependency>
	      <groupId>ru.yandex.qatools.embed</groupId>
	      <artifactId>postgresql-embedded</artifactId>
	      <version>${postgresql-embedded.version}</version>
	      <scope>test</scope>
	    </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>${maven-clean-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler-plugin.version}</version>
          <configuration>
            <source>${jdkLevel}</source>
            <target>${jdkLevel}</target>
            <showDeprecation>true</showDeprecation>
            <showWarnings>true</showWarnings>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>${maven-dependency-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>${maven-enforcer-plugin.version}</version>
          <executions>
            <execution>
              <id>enforce-maven-3</id>
              <goals>
                <goal>enforce</goal>
              </goals>
              <configuration>
                <rules>
                  <requireMavenVersion>
                    <version>[${minimumMavenVersion},)</version>
                  </requireMavenVersion>
                  <requireJavaVersion>
                    <version>[${jdkLevel},)</version>
                  </requireJavaVersion>
                </rules>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>${maven-surefire-plugin.version}</version>
          <executions>
            <execution>
              <id>integration-test</id>
              <goals>
                <goal>integration-test</goal>
              </goals>
            </execution>
            <execution>
              <id>verify</id>
              <goals>
                <goal>verify</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <!-- Use a single forked process to execute all tests See https://maven.apache.org/surefire/maven-surefire-plugin/examples/fork-options-and-parallel-execution.html -->
            <forkCount>1</forkCount>
            <reuseForks>false</reuseForks>
            <redirectTestOutputToFile>true</redirectTestOutputToFile>
            <argLine>-Xmx256m</argLine>
            <runOrder>random</runOrder>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>${maven-install-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>${maven-shade-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${maven-jar-plugin.version}</version>
          <configuration>
            <archive>
              <manifest>
                <addDefaultSpecificationEntries>true
                </addDefaultSpecificationEntries>
                <addDefaultImplementationEntries>true
                </addDefaultImplementationEntries>
                <addClasspath>true</addClasspath>
              </manifest>
            </archive>
          </configuration>
          <executions>
            <execution>
              <id>attach-test-jar</id>
              <goals>
                <goal>test-jar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${maven-resources-plugin.version}</version>
        </plugin>
        <plugin>
          <!-- Note: http://jira.codehaus.org/browse/MSOURCES-45, http://jira.codehaus.org/browse/MSOURCES-50 -->
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>${maven-source-plugin.version}</version>
          <executions>
            <execution>
              <id>attach-sources</id>
              <phase>package</phase>
              <goals>
                <goal>jar-no-fork</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven-surefire-plugin.version}</version>
          <configuration>
            <!-- Use a new forked process for each test See https://maven.apache.org/surefire/maven-surefire-plugin/examples/fork-options-and-parallel-execution.html -->
            <forkCount>1</forkCount>
            <reuseForks>false</reuseForks>
            <redirectTestOutputToFile>true</redirectTestOutputToFile>
            <argLine>-Xmx256m</argLine>
            <runOrder>random</runOrder>

            <includes>
              <!-- include regular unit tests -->
              <include>**/*Test.java</include>
              <!-- include test suites -->
              <include>**/*TestSuite.java</include>
            </includes>
            <excludes>
              <!-- exlude all mapper tests which are jointly executed by the MapperTestSuite instead -->
              <!-- DISABLE FOR NOW <exclude>**/*MapperTest.java</exclude> -->
            </excludes>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
          <version>${versions-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>${maven-release-plugin.version}</version>
          <configuration>
            <goals>deploy</goals>
            <preparationGoals>install</preparationGoals>
            <resume>false</resume>
            <useReleaseProfile>true</useReleaseProfile>
            <releaseProfiles>col-release</releaseProfiles>
            <tagNameFormat>${project.artifactId}-@{project.version}</tagNameFormat>
          </configuration>
        </plugin>
          <plugin>
              <groupId>org.codehaus.mojo</groupId>
              <artifactId>exec-maven-plugin</artifactId>
              <version>${exec-maven-plugin.version}</version>
          </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <version>${maven-jar-plugin.version}</version>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <source>${jdkLevel}</source>
          <target>${jdkLevel}</target>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-source-plugin</artifactId>
        <version>${maven-source-plugin.version}</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- run integration tests (*IT) during verify -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
          <version>${maven-surefire-plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven-surefire-plugin.version}</version>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <!-- automatically used by the release plugin -->
    <profile>
      <id>col-release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>enforce</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>[${minimumMavenVersion},)</version>
                </requireMavenVersion>
                <requireJavaVersion>
                  <version>[${jdkLevel},)</version>
                </requireJavaVersion>
                <requirePluginVersions>
                  <message>Best Practice is to always define plugin versions!
                  </message>
                </requirePluginVersions>
                <requireReleaseDeps>
                  <message>No Snapshot dependencies allowed!</message>
                </requireReleaseDeps>
              </rules>
            </configuration>
          </plugin>
          <plugin>
            <artifactId>maven-source-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar-no-fork</goal>
                  <goal>test-jar-no-fork</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
