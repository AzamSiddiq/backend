package org.col.api.vocab;

/**
 * Official CSL variables as defined in
 * Appendix IV - Variables
 * http://docs.citationstyles.org/en/stable/specification.html#appendix-iv-variables
 */
public enum CSLVariable {

  /**
   * abstract of the item (e.g. the abstract of a journal article)
   **/
  ABSTRACT(),

  /**
   * reader’s notes about the item content
   **/
  ANNOTE(),

  /**
   * archive storing the item
   **/
  ARCHIVE(),

  /**
   * storage location within an archive (e.g. a box and folder number)
   **/
  ARCHIVE_LOCATION(),

  /**
   * geographic location of the archive
   **/
  ARCHIVE_PLACE(),

  /**
   * issuing or judicial authority (e.g. “USPTO” for a patent, “Fairfax Circuit Court” for a legal case)
   **/
  AUTHORITY(),

  /**
   * call number (to locate the item in a library)
   **/
  CALL_NUMBER(),

  /**
   * label identifying the item in in-text citations of label styles (e.g. “Ferr78”). May be assigned by the CSL processor based on item metadata.
   **/
  CITATION_LABEL(),

  /**
   * index (starting at 1) of the cited reference in the bibliography (generated by the CSL processor)
   **/
  CITATION_NUMBER(),

  /**
   * title of the collection holding the item (e.g. the series title for a book)
   **/
  COLLECTION_TITLE(),

  /**
   * title of the container holding the item (e.g. the book title for a book chapter, the journal title for a journal article)
   **/
  CONTAINER_TITLE(),

  /**
   * short/abbreviated form of “container-title” (also accessible through the “short” form of the “container-title” variable)
   **/
  CONTAINER_TITLE_SHORT(),

  /**
   * physical (e.g. size) or temporal (e.g. running time) dimensions of the item
   **/
  DIMENSIONS(),

  /**
   * Digital Object Identifier (e.g. “10.1128/AEM.02591-07”)
   **/
  DOI(),

  /**
   * name of the related event (e.g. the conference name when citing a conference paper)
   **/
  EVENT(),

  /**
   * geographic location of the related event (e.g. “Amsterdam, the Netherlands”)
   **/
  EVENT_PLACE(),

  /**
   * number of a preceding note containing the first reference to the item. Assigned by the CSL processor. The variable holds no value for non-note-based styles, or when the item hasn’t been cited in any preceding notes.
   **/
  FIRST_REFERENCE_NOTE_NUMBER(),

  /**
   * class, type or genre of the item (e.g. “adventure” for an adventure movie, “PhD dissertation” for a PhD thesis)
   **/
  GENRE(),

  /**
   * International Standard Book Number
   **/
  ISBN(),

  /**
   * International Standard Serial Number
   **/
  ISSN(),

  /**
   * geographic scope of relevance (e.g. “US” for a US patent)
   **/
  JURISDICTION(),

  /**
   * keyword(s) or tag(s) attached to the item
   **/
  KEYWORD(),

  /**
   * a cite-specific pinpointer within the item (e.g. a page number within a book, or a volume in a multi-volume work). Must be accompanied in the input data by a label indicating the locator type (see the Locators term list), which determines which term is rendered by cs:label when the “locator” variable is selected.
   **/
  LOCATOR(),

  /**
   * medium description (e.g. “CD”, “DVD”, etc.)
   **/
  MEDIUM(),

  /**
   * (short) inline note giving additional item details (e.g. a concise summary or commentary)
   **/
  NOTE(),

  /**
   * original publisher, for items that have been republished by a different publisher
   **/
  ORIGINAL_PUBLISHER(),

  /**
   * geographic location of the original publisher (e.g. “London, UK”)
   **/
  ORIGINAL_PUBLISHER_PLACE(),

  /**
   * title of the original version (e.g. “Война и мир”, the untranslated Russian title of “War and Peace”)
   **/
  ORIGINAL_TITLE(),

  /**
   * range of pages the item (e.g. a journal article) covers in a container (e.g. a journal issue)
   **/
  PAGE(),

  /**
   * first page of the range of pages the item (e.g. a journal article) covers in a container (e.g. a journal issue)
   **/
  PAGE_FIRST(),

  /**
   * PubMed Central reference number
   **/
  PMCID(),

  /**
   * PubMed reference number
   **/
  PMID(),

  /**
   * publisher
   **/
  PUBLISHER(),

  /**
   * geographic location of the publisher
   **/
  PUBLISHER_PLACE(),

  /**
   * resources related to the procedural history of a legal case
   **/
  REFERENCES(),

  /**
   * title of the item reviewed by the current item
   **/
  REVIEWED_TITLE(),

  /**
   * scale of e.g. a map
   **/
  SCALE(),

  /**
   * container section holding the item (e.g. “politics” for a newspaper article)
   **/
  SECTION(),

  /**
   * from whence the item originates (e.g. a library catalog or database)
   **/
  SOURCE(),

  /**
   * (publication) status of the item (e.g. “forthcoming”)
   **/
  STATUS(),

  /**
   * primary title of the item
   **/
  TITLE(),

  /**
   * short/abbreviated form of “title” (also accessible through the “short” form of the “title” variable)
   **/
  TITLE_SHORT(),

  /**
   * Uniform Resource Locator (e.g. “http://aem.asm.org/cgi/content/full/74/9/2766”)
   **/
  URL(),

  /**
   * version of the item (e.g. “2.0.9” for a software program)
   **/
  VERSION(),

  /**
   * disambiguating year suffix in author-date styles (e.g. “a” in “Doe, 1999a”)
   **/
  YEAR_SUFFIX(),


  /**
   * chapter number
   **/
  CHAPTER_NUMBER(TYPE.NUMBER),

  /**
   * number identifying the collection holding the item (e.g. the series number for a book)
   **/
  COLLECTION_NUMBER(TYPE.NUMBER),

  /**
   * (container) edition holding the item (e.g. “3” when citing a chapter in the third edition of a book)
   **/
  EDITION(TYPE.NUMBER),

  /**
   * (container) issue holding the item (e.g. “5” when citing a journal article from journal volume 2, issue 5)
   **/
  ISSUE(TYPE.NUMBER),

  /**
   * number identifying the item (e.g. a report number)
   **/
  NUMBER(TYPE.NUMBER),

  /**
   * total number of pages of the cited item
   **/
  NUMBER_OF_PAGES(TYPE.NUMBER),

  /**
   * total number of volumes, usable for citing multi-volume books and such
   **/
  NUMBER_OF_VOLUMES(TYPE.NUMBER),

  /**
   * (container) volume holding the item (e.g. “2” when citing a chapter from book volume 2)
   **/
  VOLUME(TYPE.NUMBER),


  /**
   * date the item has been accessed
   **/
  ACCESSED(TYPE.DATE),

  /**
   * ???
   */
  CONTAINER(TYPE.DATE),

  /**
   * date the related event took place
   **/
  EVENT_DATE(TYPE.DATE),

  /**
   * date the item was issued/published
   **/
  ISSUED(TYPE.DATE),

  /**
   * (issue) date of the original version
   **/
  ORIGINAL_DATE(TYPE.DATE),

  /**
   * date the item (e.g. a manuscript) has been submitted for publication
   **/
  SUBMITTED(TYPE.DATE),

  /**
   * author
   **/
  AUTHOR(TYPE.NAME),

  /**
   * editor of the collection holding the item (e.g. the series editor for a book)
   **/
  COLLECTION_EDITOR(TYPE.NAME),

  /**
   * composer (e.g. of a musical score)
   **/
  COMPOSER(TYPE.NAME),

  /**
   * author of the container holding the item (e.g. the book author for a book chapter)
   **/
  CONTAINER_AUTHOR(TYPE.NAME),

  /**
   * director (e.g. of a film)
   **/
  DIRECTOR(TYPE.NAME),

  /**
   * editor
   **/
  EDITOR(TYPE.NAME),

  /**
   * managing editor (“Directeur de la Publication” in French)
   **/
  EDITORIAL_DIRECTOR(TYPE.NAME),

  /**
   * illustrator (e.g. of a children’s book)
   **/
  ILLUSTRATOR(TYPE.NAME),

  /**
   * interviewer (e.g. of an interview)
   **/
  INTERVIEWER(TYPE.NAME),

  /**
   * ???
   */
  ORIGINAL_AUTHOR(TYPE.NAME),

  /**
   * recipient (e.g. of a letter)
   **/
  RECIPIENT(TYPE.NAME),

  /**
   * author of the item reviewed by the current item
   **/
  REVIEWED_AUTHOR(TYPE.NAME),

  /**
   * translator
   **/
  TRANSLATOR(TYPE.NAME);

  private enum TYPE {STRING, NUMBER, DATE, NAME}

  ;

  final private TYPE type;

  private CSLVariable() {
    this.type = TYPE.STRING;
  }

  private CSLVariable(TYPE type) {
    this.type = type;
  }

  public String toCSL() {
    return name().toLowerCase().replaceAll("_", "-");
  }

  public static CSLVariable fromCSL(String type) {
    return CSLVariable.valueOf(type.toUpperCase().replaceAll("-", "_"));
  }
}
