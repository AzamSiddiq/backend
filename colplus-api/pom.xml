<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.col</groupId>
    <artifactId>colplus-motherpom</artifactId>
    <version>1.0-SNAPSHOT</version>
  </parent>

  <artifactId>colplus-api</artifactId>
  <packaging>jar</packaging>

  <name>CoL backend services (API)</name>
  <url>http://github.org/sp2000/${project.artifactId}</url>

  <scm>
    <connection>scm:git:git@github.com:sp2000/motherpom.git</connection>
    <url>https://github.com/sp2000/motherpom</url>
    <developerConnection>scm:git:git@github.com:sp2000/motherpom.git</developerConnection>
    <tag>HEAD</tag>
  </scm>

  <prerequisites>
    <maven>${minimumMavenVersion}</maven>
  </prerequisites>


  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>https://raw.github.com/gbif/motherpom/master/LICENSE</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <organization>
    <name>Species 2000</name>
    <url>http://www.sp2000.org/</url>
  </organization>

  <issueManagement>
    <system>github</system>
    <url>https://github.com/Sp2000/colplus-backend/issues</url>
  </issueManagement>

  <repositories>
    <repository>
      <id>gbif-all</id>
      <url>http://repository.gbif.org/content/groups/gbif</url>
    </repository>
  </repositories>

  <distributionManagement>
    <repository>
      <id>gbif-release</id>
      <url>http://repository.gbif.org/content/repositories/releases</url>
    </repository>
    <snapshotRepository>
      <id>gbif-snapshot</id>
      <url>http://repository.gbif.org/content/repositories/snapshots</url>
    </snapshotRepository>
  </distributionManagement>

  <dependencies>
    <!-- Dropqizard -->
    <dependency>
      <groupId>io.dropwizard</groupId>
      <artifactId>dropwizard-core</artifactId>
    </dependency>
    <!-- <dependency> <groupId>com.github.alex-shpak</groupId> <artifactId>dropwizard-hk2bundle</artifactId> 
      <version>0.5.2</version> </dependency> -->
    <!-- GBIF -->
    <dependency>
      <groupId>org.gbif</groupId>
      <artifactId>dwc-api</artifactId>
      <version>${dwc-api.version}</version>
    </dependency>
    <dependency>
      <groupId>org.gbif</groupId>
      <artifactId>name-parser</artifactId>
      <version>${name-parser.version}</version>
    </dependency>
    <dependency>
      <groupId>org.gbif</groupId>
      <artifactId>gbif-parsers</artifactId>
      <version>${gbif-parser.version}</version>
    </dependency>
    <dependency>
      <groupId>org.gbif</groupId>
      <artifactId>dwca-io</artifactId>
      <version>${dwca-io.version}</version>
      <exclusions>
        <exclusion>
          <!-- digester via cglib brings in an old asm version, conflicting with kryo -->
          <artifactId>asm</artifactId>
          <groupId>asm</groupId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- mybatis / DB -->
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>${postgresql.version}</version>
    </dependency>
    <dependency>
      <groupId>com.zaxxer</groupId>
      <artifactId>HikariCP</artifactId>
      <version>${hikaricp.version}</version>
    </dependency>
    <dependency>
      <groupId>org.mybatis</groupId>
      <artifactId>mybatis</artifactId>
      <version>${mybatis.version}</version>
    </dependency>

    <!-- neo4j, mapdb & kryo -->
    <dependency>
      <groupId>org.mapdb</groupId>
      <artifactId>mapdb</artifactId>
      <version>${mapdb.version}</version>
    </dependency>
    <dependency>
      <groupId>org.neo4j</groupId>
      <artifactId>neo4j</artifactId>
      <version>${neo4j.version}</version>
      <exclusions>
        <exclusion>
          <!-- turn off usage reporting to neo -->
          <groupId>org.neo4j</groupId>
          <artifactId>neo4j-udc</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.neo4j</groupId>
      <artifactId>neo4j-kernel</artifactId>
      <version>${neo4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.neo4j</groupId>
      <artifactId>neo4j-cypher</artifactId>
      <version>${neo4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.neo4j</groupId>
      <artifactId>neo4j-shell</artifactId>
      <version>${neo4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.neo4j</groupId>
      <artifactId>neo4j-slf4j</artifactId>
      <version>${neo4j.version}</version>
    </dependency>
    <!-- we use kryo to serialize data into binary which is > 10 times faster than jackson even with 
      smile -->
    <dependency>
      <groupId>com.esotericsoftware</groupId>
      <artifactId>kryo</artifactId>
      <version>${kryo.version}</version>
    </dependency>

    <!-- logging -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>

    <!-- JACKSON2 -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson2.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
      <version>${jackson2.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-yaml</artifactId>
      <version>${jackson2.version}</version>
    </dependency>

    <!-- other -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>${commmons-lang.version}</version>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>${guava.version}</version>
    </dependency>
    <dependency>
      <groupId>it.unimi.dsi</groupId>
      <artifactId>fastutil</artifactId>
      <version>${fastutil.version}</version>
    </dependency>

    <!-- TEST SCOPE -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>ru.yandex.qatools.embed</groupId>
      <artifactId>postgresql-embedded</artifactId>
      <version>${postgresql-embedded}</version>
      <scope>test</scope>
    </dependency>

  </dependencies>



</project>
